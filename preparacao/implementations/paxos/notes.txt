Message Format:
  * One of 5 message types, for now:
    + PREPARE
    + PROMISE (can have different formats: for example, if an acceptor has already accepted another proposal)
    + PROPOSE
    + ACCEPT
    + REJECT
  * Sender
    + TX of sender
    + PID of sender
  * Content
    + actual message (example: "SET K V"; value; etc.)


Broadcast will have the following functions:
  * broadcast 
    + Parameters:
      > list of TX of all known correct processes
      > TX for the sender of the message
      > message struct
  * send_msg
    + Parameters:
      > TX to send the message to 
      > TX of the sender 
      > message struct
    + Configurable chance for the message to be lost


Node:
  * A node can take any of the 3 roles (proposer, acceptor, learner) and can have multiple roles at the same time
  * Each node will know it's TX and RX, and the TX of the other known correct processes

TODO:
  * IDs should be unique. One possible solution is to use floats for the IDs:
    + process 1 has ids X.1
    + process 2 has ids X.2
    + etc.
